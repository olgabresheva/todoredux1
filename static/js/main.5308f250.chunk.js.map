{"version":3,"sources":["ToDoCreateForm.js","ToDoItem.js","ToDoList.js","App.js","serviceWorker.js","redux/reducers.js","redux/store.js","index.js"],"names":["connect","dispatch","addNewTask","name","description","type","payload","props","useState","taskNameInput","setTaskNameInput","taskDescriptionInput","setTaskDescriptionInput","addTaskDisabled","setAddTaskDisabled","htmlFor","className","placeholder","value","onChange","e","target","length","disabled","onClick","preventDefault","deleteBtn","width","height","viewBox","fill","xmlns","d","fillRule","doneBtn","toDoBtn","downBtn","upBtn","editBtn","taskDelete","id","taskStateChange","taskEditSave","newName","newDesc","onTaskMove","direction","editMode","setEditMode","editTaskTitle","setEditTaskTitle","editTaskDesc","setEditTaskDesc","done","state","tasks","map","el","key","App","Boolean","window","location","hostname","match","initialState","uuid","task","action","tasksDelete","filter","tasksStateChg","tasksEdit","i","findIndex","tasksPriorityChg","splice","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5308f250.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './Main.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {connect} from 'react-redux';\n\n\nfunction ToDoCreateForm(props) {\n\n    const [taskNameInput, setTaskNameInput] = useState('')\n    const [taskDescriptionInput, setTaskDescriptionInput] = useState('')\n    const [addTaskDisabled, setAddTaskDisabled] = useState(true);\n\n    const newTaskDescriptionInput = (e) => {\n        setTaskDescriptionInput(e.target.value);\n        (taskDescriptionInput.length > 3) ? setAddTaskDisabled(false) : setAddTaskDisabled(true);\n    }\n\n    const addNewTask = (e) => {\n        props.addNewTask(taskNameInput, taskDescriptionInput);\n        setTaskNameInput('');\n        setTaskDescriptionInput('')\n        e.preventDefault();\n        setAddTaskDisabled(true)\n    }\n\n\n    return (\n        <div>\n            <label htmlFor=\"exampleFormControlInput1\"><strong>Your To Do List</strong></label><br/>\n            <form>\n            <div className=\"row\">\n                <div className=\"col\">\n                    <input className=\"form-control form-control-sm\" placeholder=\"Enter Task Name\" type=\"text\"\n                           value={taskNameInput} onChange={e => setTaskNameInput(e.target.value)}/>\n                </div>\n                <div className=\"col\">\n                    <input className=\"form-control form-control-sm\" placeholder=\"Enter Task Description\" type=\"text\"\n                           value={taskDescriptionInput}\n                           onChange={newTaskDescriptionInput}/>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col\">\n            <button type=\"submit\" className=\"btn btn-primary btn-sm\" disabled={addTaskDisabled} onClick={addNewTask}>Add Task</button>\n                </div>\n            </div>\n            </form>\n        </div>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    addNewTask: (name, description) => dispatch({type: 'TASK_ADD', payload: {name, description}})\n});\n\nexport default connect(null, mapDispatchToProps)(ToDoCreateForm);\n","import React, {useState} from 'react';\nimport './Main.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {connect} from 'react-redux';\n\nconst deleteBtn = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-trash\" fill=\"currentColor\"\n                        xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n        d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\n    <path fillRule=\"evenodd\"\n          d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\n</svg>);\n\nconst doneBtn = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-check-square\" fill=\"currentColor\"\n                      xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\"\n          d=\"M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\"/>\n    <path fillRule=\"evenodd\"\n          d=\"M10.97 4.97a.75.75 0 0 1 1.071 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.236.236 0 0 1 .02-.022z\"/>\n</svg>);\n\nconst toDoBtn = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-square\" fill=\"currentColor\"\n                      xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\"\n          d=\"M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\"/>\n</svg>);\n\nconst downBtn = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-chevron-down\" fill=\"currentColor\"\n                      xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\"\n          d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\"/>\n</svg>);\n\nconst upBtn = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-chevron-up\" fill=\"currentColor\"\n                    xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\"\n          d=\"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z\"/>\n</svg>);\n\nconst editBtn = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-pencil\" fill=\"currentColor\"\n                      xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\"\n          d=\"M11.293 1.293a1 1 0 0 1 1.414 0l2 2a1 1 0 0 1 0 1.414l-9 9a1 1 0 0 1-.39.242l-3 1a1 1 0 0 1-1.266-1.265l1-3a1 1 0 0 1 .242-.391l9-9zM12 2l2 2-9 9-3 1 1-3 9-9z\"/>\n    <path fillRule=\"evenodd\"\n          d=\"M12.146 6.354l-2.5-2.5.708-.708 2.5 2.5-.707.708zM3 10v.5a.5.5 0 0 0 .5.5H4v.5a.5.5 0 0 0 .5.5H5v.5a.5.5 0 0 0 .5.5H6v-1.5a.5.5 0 0 0-.5-.5H5v-.5a.5.5 0 0 0-.5-.5H3z\"/>\n</svg>);\n\nfunction ToDoItem(props) {\n\n    const [editMode, setEditMode] = useState(false);\n    const [editTaskTitle, setEditTaskTitle] = useState(props.name);\n    const [editTaskDesc, setEditTaskDesc] = useState(props.description);\n\n    const taskEditSave = () => {\n        props.taskEditSave(props.id, editTaskTitle, editTaskDesc);\n        setEditMode(false);\n\n    }\n\n    const editModeCancel = () => {\n        setEditTaskTitle(props.name);\n        setEditTaskDesc(props.description);\n        setEditMode(false);\n    }\n\n    return (\n        <div className=\"input-group\">\n            {editMode\n                ? <>\n                    <input type=\"text\" className=\"form-control form-control-sm\" value={editTaskTitle}\n                           onChange={e => setEditTaskTitle(e.target.value)}/>\n                    <input type=\"text\" className=\"form-control form-control-sm\" value={editTaskDesc}\n                           onChange={e => setEditTaskDesc(e.target.value)}/>\n                    <button className=\"btn btn-outline-success btn-sm\" onClick={taskEditSave}>Save</button>\n                    <button className=\"btn btn-outline-secondary btn-sm\" onClick={editModeCancel}>Cancel</button>\n                </>\n                : <span\n                    className={props.done ? \"done form-control form-control-sm\" : \"form-control form-control-sm\"}>\n                    <strong>{props.name}:</strong> {props.description}\n                </span>\n            }\n            <div className=\"input-group-append\" id=\"button-addon\">\n                <button className=\"btn btn-outline-secondary btn-sm\"\n                        onClick={() => props.taskStateChange(props.id)}>{props.done ? doneBtn : toDoBtn}</button>\n                <button className=\"btn btn-outline-secondary btn-sm\"\n                        onClick={() => setEditMode(true)}>{editBtn}</button>\n                <button className=\"btn btn-outline-secondary btn-sm\"\n                        onClick={() => props.taskDelete(props.id)}>{deleteBtn}</button>\n                <button className=\"btn btn-outline-secondary btn-sm\"\n                        onClick={() => props.onTaskMove(props.id, 'up')}>{upBtn}</button>\n                <button className=\"btn btn-outline-secondary btn-sm\"\n                        onClick={() => props.onTaskMove(props.id, 'down')}>{downBtn}</button>\n            </div>\n        </div>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    taskDelete: (id) => dispatch({type: 'TASK_DELETE', payload: id}),\n    taskStateChange: (id) => dispatch({type: 'TASK_STATE_CHG', payload: id}),\n    taskEditSave: (id, newName, newDesc) => dispatch({type: 'TASK_EDIT', payload: {id, newName, newDesc}}),\n    onTaskMove: (id, direction) => dispatch({type: 'TASK_PRIORITY_CHG', payload: {id, direction}})\n})\n\n\nexport default connect(null, mapDispatchToProps)(ToDoItem);\n","import React from 'react';\nimport './Main.css';\nimport ToDoItem from \"./ToDoItem\";\nimport {connect} from \"react-redux\";\n\n\nfunction ToDoList(props) {\n\n\n    return (\n        <div className=\"ToDoList\">\n            <ul className=\"list-unstyled\">\n                {props.tasks.map(el => <li key={el.id}>\n                    <ToDoItem name={el.name}\n                              description={el.description}\n                              done={el.done}\n                              id={el.id}/>\n                </li>)}\n            </ul>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    tasks: state.tasks,\n})\n\nexport default connect(mapStateToProps, null)(ToDoList);\n","import React from 'react';\nimport './Main.css';\nimport ToDoCreateForm from \"./ToDoCreateForm\";\nimport ToDoList from \"./ToDoList\";\n\nfunction App() {\n\n    return (\n        <div className=\"container\">\n            <ToDoCreateForm/>\n            <hr/>\n            <ToDoList/>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {uuid} from \"uuidv4\";\n\nconst initialState = {\n    tasks: [\n        {id: uuid(), name: \"React\", description: \"Review Documentation, Practice\", done: false},\n        {id: uuid(), name: \"Redux\", description: \"Review Documentation, Practice Even More!!!\", done: false},\n        {id: uuid(), name: \"CSS\", description: \"Listen lectures\", done: false},\n        {id: uuid(), name: \"Done Task\", description: \"Test\", done: true}\n    ],\n};\n\nconst task = (state = initialState, action) => {\n    switch (action.type) {\n\n        case 'TASK_ADD':\n            return {\n                ...state,\n                tasks: [...state.tasks,\n                    {id: uuid(), name: action.payload.name, description: action.payload.description, done: false}]\n            };\n\n        case 'TASK_DELETE':\n            const tasksDelete = state.tasks.filter(el => el.id !== action.payload)\n\n            return {\n                ...state,\n                tasks: tasksDelete\n            };\n\n        case 'TASK_STATE_CHG':\n            const tasksStateChg = state.tasks.map(el => {\n                if (el.id === action.payload) return ({...el, done: !el.done})\n                else return el;\n            })\n\n            return {\n                ...state,\n                tasks: tasksStateChg\n            }\n\n        case 'TASK_EDIT':\n            const tasksEdit = state.tasks.map(el => {\n                if (el.id === action.payload.id) return ({\n                    ...el,\n                    name: action.payload.newName,\n                    description: action.payload.newDesc\n                })\n                else return el;\n            })\n            return {\n                ...state,\n                tasks: tasksEdit\n            }\n\n        case 'TASK_PRIORITY_CHG':\n            let i = state.tasks.findIndex(el => el.id === action.payload.id);\n            const tasksPriorityChg = [...state.tasks];\n            if (action.payload.direction === \"up\") {\n                if (i !== 0) {\n                    tasksPriorityChg.splice(i - 1, 0, tasksPriorityChg.splice(i, 1)[0])\n                }\n            }\n            if (action.payload.direction === \"down\") {\n                tasksPriorityChg.splice(i + 1, 0, tasksPriorityChg.splice(i, 1)[0])\n            }\n\n            return {\n                ...state, tasks: tasksPriorityChg\n            }\n\n\n        default:\n            return state;\n    }\n};\n\nexport default task;","import {createStore, applyMiddleware} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport task from './reducers';\n\nconst store = createStore(task, composeWithDevTools(\n    applyMiddleware(),\n));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}